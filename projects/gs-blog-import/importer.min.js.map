{"version":3,"sources":["projects\\gs-blog-import\\importer.js"],"names":["addEvent","element","event","listener","attachEvent","addEventListener","WP","name","root","item","props","site","posts","map","title","mapTo","cdata","pubDate","dc:creator","content:encoded","content:excerpt","wp:post_name","categories","wp:status","mapNM","app","getOption","id","result","option","document","getElementById","getElementsByName","type","value","checked","options","selectedIndex","i","length","gsXML","this","data","node","children","prototype","set","prop","cache","get","subitem","key","view","previewIndex","previewMode","updateFileInfo","el","prefix","warn","indexOf","textContent","className","innerHTML","readXml","file","callback","reader","FileReader","onload","e","target","srcElement","DOMParser","parseFromString","cms","xml","fileSize","Math","floor","size","fileName","fileType","slice","lastIndexOf","defineXmlns","extractSiteProps","extractPosts","extractPostProps","readAsText","nName","nValue","getElementsByTagName","attrs","attributes","nodeName","nodeValue","split","getElementsByNameNS","doc","tagName","getElementsByTagNameNS","trim","tag","push","postXml","previewPosts","row","vCol","tCol","appendTo","output","createElement","jsPost","appendChild","createTextNode","outerHTML","generatePostXml","pretty","content","processPost","post","url","regex","replace","RegExp","generatePostsOutput","convertPosts","tree","arr","console","log","metad","json","join","call","jsPosts","processedContent","hasOwnProperty","author","user","template","parent","bindClick","parentNode","zip","JSZip","generate","saveAs","files","body","onchange","toLowerCase"],"mappings":"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","file":"projects\\gs-blog-import\\importer.min.js","sourcesContent":["/** GS Posts import - Import Wordpress (& in the future other CMS'es) blog posts easily to GetSimple CMS. \r\n *  Version 0.1 - 4th of June 2015\r\n *  By Kevin Van Lierde (tyblitz) - webketje.com\r\n *  Contact me via kevin.van.lierde@gmail.com or via Twitter [@]Tyblitz\r\n *  Copyright 2015\r\n *  \r\n * The MIT License (MIT)\r\n * Copyright (c) 2015 Kevin Van Lierde\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n * \r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n * \r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n *\r\n *  A quick roundup of the functions inside the anonymous closure\r\n *  -------------------------------------------------------------\r\n *  XML preps:\r\n *    - app.readXml | reads the file input, updates file properties, & sets app.cache.xml\r\n *    - app.defineXmlns | retrieves the xmlns attributes from the XML root & sets it to app.cache.xmlns\r\n *    - app.getElementsByNameNS | retrieves a (name-spaced) element from the XML doc; uses app.cache.xmlns\r\n *  XML processing:\r\n *    - app.extractSiteProps | sets all properties in app.cache.cms to app.cache._site; launched in app.readXml\r\n *    - app.extractPosts | sets app.cache.__posts & app.cache.filePosts; launched in app.readXml\r\n *    - app.extractPostProps | maps individual post properties; called in app.extractPosts or its callback\r\n *  Display:\r\n *    - app.view.updateFileInfo | updates file info in step 1000\r\n *    - app.previewPosts | previews the post from app.cache.posts with index app.view.previewIndex\r\n *  Output:\r\n *    - app.generatePostXml | returns the GS page XML for 1 post passed to it (after having been mapped with app.cache.cms.map)\r\n *    - app.generatePostsOutput | generates a JSON GS tree & corresponding XML string (using app.generatePostXml) & returns an array of all posts\r\n *    - app.processPost | processes a post with the current options for export (returns it); used in CMS-specific convertPosts function\r\n *  \r\n *  Except for these, every CMS requires a name.convertPosts function for final export, and may optionally add a function:\r\n *  - name.processPostContent (hook in app.processPost)\r\n *  - name.extractPostProps (hook as callback in app.extractPosts, as passed in app.readXml)\r\n *  \r\n */\r\n\r\n\r\n(function() {\r\n\r\n\t\"use strict\";\r\n\t\r\n\t// IE8 polyfill\r\n\t\r\n\tfunction addEvent(element, event, listener) {\r\n\t  if (element.attachEvent)\r\n\t    element.attachEvent('on' + event, listener);\r\n\t  else if (element.addEventListener)\r\n\t\t\telement.addEventListener(event, listener, false);\r\n\t}\r\n\t\r\n\t// The WP object holds all properties to be saved from a WP export file\r\n\t// props.site holds site-wide properties, direct children of the root <rss> element.\r\n\t// props.posts holds properties to be used in app.extractPosts\r\n\t// from.posts holds a map for mapping post properties to a GS xml page file\r\n\t\r\n\t// function getOption retrieves options from the WP form\r\n\t// @param {string} id - ID (or name for option inputs) of the element whose value to retrieve\r\n\t\r\n\tvar WP = {\r\n\t\tname: 'Wordpress',\r\n\t\troot: 'rss',\r\n\t\titem: 'item',\r\n\t\tprops: {\r\n\t\t\tsite: ['title','link','description','pubDate','language','wp:wxr_version','wp:base_site_url','wp:base_blog_url','wp:author_email','wp:author_display_name','wp:author_first_name','wp:author_last_name','generator'],\r\n\t\t\tposts: ['title','link','pubDate','dc:creator','content:encoded','wp:post_date','wp:post_date_gmt','wp:post_name','wp:status']\r\n\t\t},\r\n\t\tmap: {\r\n\t\t\t\t\t\t'title': {mapTo: 'title',   cdata: true },\r\n\t\t\t\t\t'pubDate': {mapTo: 'pubDate', cdata: false},\r\n\t\t\t 'dc:creator': {mapTo: 'user',    cdata: true },\r\n  'content:encoded': {mapTo: 'content', cdata: true },\r\n  'content:excerpt': {mapTo: 'metad',   cdata: true },\r\n// 'wp:post_date_gmt': {mapTo: 'creDate', cdata: false},\r\n\t\t 'wp:post_name': {mapTo: 'url',     cdata: true },\r\n\t\t   'categories': {mapTo: 'meta',    cdata: true },\r\n\t\t    'wp:status': {mapTo: 'private' }\r\n\t\t},\r\n\t\tmapNM: {\r\n\t\t\t\t\t\t'title': {mapTo: 'title',   cdata: true },\r\n\t\t\t\t\t'pubDate': {mapTo: 'date',    cdata: false},\r\n\t\t\t 'dc:creator': {mapTo: 'user',    cdata: true },\r\n  'content:encoded': {mapTo: 'content', cdata: true },\r\n  'content:excerpt': {mapTo: 'metad',   cdata: true },\r\n// 'wp:post_date_gmt': {mapTo: 'creDate', cdata: false},\r\n\t\t 'wp:post_name': {mapTo: 'url',     cdata: true },\r\n\t\t   'categories': {mapTo: 'tags',    cdata: true }\r\n\t\t},\r\n\t},\r\n\tapp = {};\r\n\t\r\n\tapp.getOption = function(id) {\r\n\t\tvar option = document.getElementById(id) ? document.getElementById(id) : document.getElementsByName(id), \r\n\t\t\tresult;\r\n\t\tif (option.type === 'text')\r\n\t\t\tresult = option.value;\r\n\t\telse if (option.type === 'checkbox')\r\n\t\t\tresult = option.checked;\r\n\t\telse if (option.type === 'select')\r\n\t\t\tresult = option.options[option.selectedIndex].value;\r\n\t\telse if (!option.id) {\r\n\t\t\tfor (var i = 0; i < option.length; i++) {\r\n\t\t\t\tif (option[i].checked === true)\r\n\t\t\t\t\tresult = option[i].value;\r\n\t\t\t}\t\t\t\t\t\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n\tapp.gsXML = function() {\r\n\t  this.data = { node: 'item', children: [\r\n\t\t\t{node: 'title', cdata: true},\r\n\t\t\t{node: 'url', cdata: true},\r\n\t\t\t{node: 'pubDate', cdata: false},\r\n\t\t\t{node: 'author', cdata: true},\r\n\t\t\t{node: 'meta', cdata: true},\r\n\t\t\t{node: 'metad', cdata: true},\r\n\t\t\t{node: 'menu', cdata: true},\r\n\t\t\t{node: 'menuOrder', cdata: true},\r\n\t\t\t{node: 'menuStatus', cdata: true},\r\n\t\t\t{node: 'template', cdata: true},\r\n\t\t\t{node: 'parent', cdata: true},\r\n\t\t\t{node: 'content', cdata: true}\r\n\t\t]};\r\n\t};\r\n\tapp.gsXML.prototype.set = function(item, prop, value) {\r\n\t\tfor (var i = 0; i < this.data.children.length; i++) {\r\n\t\t\tif (this.data.children[i].node === item) {\r\n\t\t\t\tthis.data.children[i][prop] = value;\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t};\r\n\t\r\n\t// app.cache is dynamically populated with the following sub-objects/ properties\r\n\t// Meta-data related to the file: fileSize, fileType, fileName, filePosts\r\n\t// __posts & _site: objects with original XML tags as keys & original content as values\r\n\t// _posts: objects with converted xml tags as keys & converted content as values\r\n\t// posts: objects containing both xml & json nodes with the latter having a structure like app.gsXML\r\n\t\r\n\tapp.cache = {\r\n\t\tget: function(item, subitem) {\t\r\n\t\t\tif (subitem)\r\n\t\t\t\treturn app.cache[item][subitem] || false;\r\n\t\t\telse\r\n\t\t\t\treturn app.cache[item] || false; \r\n\t\t},\r\n\t\tset: function(item, value) { \r\n\t\t\tif (typeof item === 'string')\r\n\t\t\t\tapp.cache[item] = value; \r\n\t\t\telse {\r\n\t\t\t\tfor (var key in item) \r\n\t\t\t\t\tapp.cache[key] = item[key];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\t// only WP at the moment\r\n\tapp.cache.set('cms', WP);\r\n\t\r\n\t// app.view holds some state properties concerning the app's view\r\n\t\r\n\tapp.view = {\r\n\t\tpreviewIndex: 0,\r\n\t\tpreviewMode: 'table'\r\n\t};\r\n\t\r\n\t// update file info in the UI\r\n\t\r\n\tapp.view.updateFileInfo = function() {\r\n\t\tvar props = [\r\n\t\t\t{el: 'file-name', data: app.cache.get('fileName'), prefix: 'File name:', warn: function(item) { return item.indexOf('.xml') === -1}}, \r\n\t\t\t{el: 'file-size', data: app.cache.get('fileSize'), prefix: 'File size:'}, \r\n\t\t\t{el: 'file-posts',data: app.cache.get('filePosts'),prefix: 'Posts:',     warn: function(item) { return item > 1000 || item === 'Error' }}, \r\n\t\t\t{el: 'file-type', data: app.cache.get('fileType'), prefix: 'File type:', warn: function(item) { return item !== 'text/xml'}}\r\n\t\t];\r\n\t\tfor (var i = 0; i < props.length; i++) {\r\n\t\t\tdocument.getElementById(props[i].el).textContent = props[i].prefix + ' ' + props[i].data;\r\n\t\t\tif (props[i].warn && props[i].warn(props[i].data)) {\r\n\t\t\t\tdocument.getElementById(props[i].el).className = 'uk-alert-danger';\r\n\t\t\t\tdocument.getElementById(props[i].el).innerHTML = '<i class=\"uk-icon-close\"></i>&nbsp;&nbsp;' + document.getElementById(props[i].el).innerHTML;\r\n\t\t\t} else if (props[i].el !== 'file-size') {\r\n\t\t\t\tdocument.getElementById(props[i].el).className = 'uk-alert-success';\r\n\t\t\t\tdocument.getElementById(props[i].el).innerHTML = '<i class=\"uk-icon-check\"></i>&nbsp;&nbsp;' + document.getElementById(props[i].el).innerHTML;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\t// processes input from the file input, making use of FileReader & DOMParser API\r\n\t// @param file - data as gotten from the file input\r\n\t// @param callback - a function to execute after file read has completed\r\n\t// sets app.cache.xml\r\n\t\r\n\tapp.readXml = function (file, callback) { \r\n    var reader = new FileReader();\r\n    reader.onload = success;  \r\n    \r\n    function success(e) { \r\n     \r\n\t\t\tvar target = e.target || e.srcElement,\r\n\t\t\t\t\tparser = new DOMParser(),\r\n\t\t\t\t\tresult = parser.parseFromString(target.result, 'application/xml'),\r\n\t\t\t\t\tcms = app.cache.get('cms');\r\n\t\t\t\t\t\r\n\t\t\tapp.cache.set({\r\n\t\t\t\txml: result,\r\n\t\t\t\tfileSize: Math.floor(file.size/1024, 2) + ' KB',\r\n\t\t\t\tfileName: file.name,\r\n\t\t\t\tfileType: file.type ? file.type : file.name.slice(file.name.lastIndexOf('.') + 1)\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tapp.defineXmlns();\r\n\t\t\tapp.extractSiteProps(cms.props.site);\r\n\t\t\tapp.extractPosts(cms.item, cms.props.posts, cms.extractPostProps);\r\n\t\t\tapp.view.updateFileInfo();\r\n    }   \r\n    \r\n    reader.readAsText(file);                                              \r\n\t} \r\n\t\r\n\t// defines the namespaces used by the getElementsByTagNameNS function\r\n\t// I: raw XML as gotten from app.cache.xml\r\n\t// O: an object with namespace names as keys & namespace URI's as value\r\n\t// sets app.cache.xmlns\r\n\t\r\n\tapp.defineXmlns = function() {\r\n\t\tvar root = app.cache.get('xml').getElementsByTagName(app.cache.get('cms','root'))[0],\r\n\t\t\t\tattrs = {}, nName, nValue;\r\n\t\tif (root) {\r\n\t\t\tfor (var i = 0; i < root.attributes.length; i++) {\r\n\t\t\t\tnName = root.attributes[i].nodeName;\r\n\t\t\t\tnValue = root.attributes[i].nodeValue;\r\n\t\t\t\tif (nName.indexOf('xmlns') > -1) {\r\n\t\t\t\t\tattrs[nName.split(':')[1]] = nValue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tapp.cache.set('xmlns', attrs);\r\n\t\t}\r\n\t};\r\n\t\r\n\t// retrieves elements in an XML document, both with & without namespace.\r\n\t// @param {XMLElement|XMLDocument} doc - the root from which to search for the element\r\n\t// @param {string} tagName - the name of the element to search for\r\n\t\r\n\tapp.getElementsByNameNS = function(doc, tagName) {\r\n\t\tvar tagName = tagName;\r\n\t\tif (tagName.indexOf(':') > -1) {\r\n\t\t\ttagName = tagName.split(':');\r\n\t\t\treturn doc.getElementsByTagNameNS(app.cache.get('xmlns')[tagName[0]], tagName[1])[0];\r\n\t\t} else {\r\n\t\t\treturn doc.getElementsByTagName(tagName)[0];\r\n\t\t}\r\n\t};\r\n\t\r\n\t// sets app.cache._site\r\n\t\r\n\tapp.extractSiteProps = function(props) {\r\n\t\tvar result = {};\r\n\t\tfor (var i = 0; i < props.length; i++) {\r\n\t\t\tif (app.getElementsByNameNS(app.cache.xml, props[i]))\r\n\t\t\tresult[props[i]] = app.getElementsByNameNS(app.cache.xml, props[i]).textContent.trim();\r\n\t\t}\r\n\t\tapp.cache.set('_site', result);\r\n\t\treturn result;\r\n\t};\r\n\t\r\n\t// sets app.cache.__posts & app.cache.filePosts\r\n\t// @param {string} tag - the container tag for one post item \r\n\t// @param {array} props - properties to pass to callback for processing\r\n\t// @param {function} callback - a function to process post items & their properties\r\n\t// the callback function should first include a call to app.extractPostProps.call()\r\n\t\r\n\tapp.extractPosts = function(tag, props, callback) {\r\n\t\tvar posts = app.cache.xml.getElementsByTagName(tag),\r\n\t\t\t\tresult = [], post;\r\n\t\tfor (var i = 0; i < posts.length; i++) {\r\n\t\t\tresult.push(callback(posts[i], props));\r\n\t\t}\r\n\t\tapp.cache.set('__posts', result);\r\n\t\tapp.cache.set('filePosts', posts.length ? posts.length : 'Error');\r\n\t};\r\n\t\r\n\t// extractPostProps called as (part of) callback in app.extractPosts\r\n\t// @param {object} postXml - xml of an individual post item\r\n\t\r\n\tapp.extractPostProps = function(postXml, props) {\r\n\t\tvar result = {};\r\n\t\tfor (var i = 0; i < props.length; i++) {\r\n\t\t\tif (app.getElementsByNameNS(postXml, props[i]))\r\n\t\t\t\tresult[props[i]] = app.getElementsByNameNS(postXml, props[i]).textContent.trim();\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n\t\t\r\n\t// generates a preview in the preview window\r\n\t// @param {object} jsPost - a post item to preview\r\n\t// @param {number} i - the index of the post to preview\r\n\t// TODO: pass the post directly\r\n\t\r\n\tapp.previewPosts = function() {\r\n\t\t\r\n\t\tvar tag, value, row, vCol, tCol, \r\n\t\t\tappendTo = document.getElementById('preview'),\r\n\t\t\toutput = document.createElement('table'), \r\n\t\t\tjsPost = app.cache.get('_posts')[app.view.previewIndex];\r\n\t\tif (app.getOption('view-mode') === 'view-table') {\r\n\t\t\toutput.className = 'uk-table uk-table-condensed';\r\n\t\t\tfor (var prop in jsPost) {\r\n\t\t\t\ttag = document.createElement('code');\r\n\t\t\t\ttag.appendChild(document.createTextNode('<' + prop + '>'));\r\n\t\t\t\tvalue = document.createTextNode(jsPost[prop]);\r\n\t\t\t\trow = document.createElement('tr');\r\n\t\t\t\ttCol = document.createElement('td');\r\n\t\t\t\tvCol = document.createElement('td');\r\n\t\t\t\ttCol.appendChild(tag);\r\n\t\t\t\tvCol.appendChild(value);\r\n\t\t\t\trow.appendChild(tCol);\r\n\t\t\t\trow.appendChild(vCol);\r\n\t\t\t\toutput.appendChild(row);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\toutput = document.createElement('pre');\r\n\t\t\toutput.appendChild(document.createTextNode(app.cache.get('posts')[app.view.previewIndex].xml));\r\n\t\t}\r\n\t\tappendTo.innerHTML = output.outerHTML;\r\n\t}\r\n\t\r\n\t// builds a GS XML page, used in function app.generatePostXml\r\n\t\r\n\tapp.generatePostXml = function(node) {\r\n\t\tvar output = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>',\r\n\t\t\t\tpretty = app.getOption('pretty-print');\r\n\t\tif (pretty) output += '\\n';\r\n\t\toutput += '<' + node.node + '>';\r\n\t\tfor (var i = 0; i < node.children.length; i++) {\r\n\t\t\tif (pretty) \r\n\t\t\t\toutput += '\\n\\t';\r\n\t\t\toutput += '<' + node.children[i].node + '>' + (node.children[i].cdata ? '<![CDATA[' + (node.children[i].content ? node.children[i].content : '' ) + ']]>' : node.children[i].content ?  node.children[i].content : '') + '</' + node.children[i].node + '>';\r\n\t\t}\r\n\t\tif (pretty) output += '\\n';\r\n\t\toutput += '</' + node.node + '>';\r\n\t\treturn output;\r\n\t}\r\n\t\t\r\n\t// function WP.processPost(content), handles output options\r\n\t// @param content {string} - String XML content to customize\r\n\t// @param url {string} - the object to make content & metad properties of\r\n\t// returns object { content: stringOutput, metad: stringOutput }\r\n\t\r\n\tapp.processPost = function(post, url) {\r\n\t\r\n\t\tvar content = post.content, metad = '', regex = {\r\n\t\t\thtmlSectioning: /<\\/*(section|main|header|footer|aside|nav).*?>/g,\r\n\t\t\thtmlDiv: /<\\/*div.*?>/g,\r\n\t\t\thtmlAll: /<\\/*.*?>/g,\r\n\t\t\thtmlAttrClass: /\\s*class=\".*?\"/g,\r\n\t\t\thtmlAttrId: /\\s*id=\".*?\"/g,\r\n\t\t\thtmlEmpty: /<[^\\/>][^>]*[^\\/]><\\/[^>]+>/,\r\n\t\t\thtmlLonely: /s/g,\r\n\t\t\tspaceEntity: /&nbsp;/g,\r\n\t\t\tspaceCharsPlus: /\\s+/g\r\n\t\t};\r\n\t\t\r\n\t\t// make sure we don't forget to remove unnecessary &nbsp; spaces, convert them first\r\n\t\tpost.content = content.replace(regex.spaceEntity, ' ');\r\n\t\tif (app.getOption('trim-whitespace'))\r\n\t\t\tpost.content = content.replace(regex.spaceCharsPlus, ' ');\r\n\t\t\r\n\t\t// hook for CMS-specific functions\r\n\t\tif (typeof app.cache.cms.processPost === 'function')\r\n\t\t\tpost = app.cache.cms.processPost(post);\r\n\t\tcontent = post.content;\r\n\t\t// handle options\r\n\t\tif (app.getOption('link-handler') !== 'none') {\r\n\t\t\tif (app.getOption('link-handler') === 'root-rel')\r\n\t\t\t\tcontent = content.replace(new RegExp(url, ''));\r\n\t\t\telse if (app.getOption('link-handler') === 'new-link')\r\n\t\t\t\tcontent = content.replace(new RegExp(url, app.getOption('new-link-url')));\r\n\t\t}\r\n\t\tif (app.getOption('strip-sections'))\r\n\t\t\tcontent = content.replace(regex.htmlSectioning, '');\r\n\t\tif (app.getOption('strip-divs'))\r\n\t\t\tcontent = content.replace(regex.htmlDiv, '');\r\n\t\tif (app.getOption('strip-id'))\r\n\t\t\tcontent = content.replace(regex.htmlAttrId, '');\r\n\t\tif (app.getOption('strip-class'))\r\n\t\t\tcontent = content.replace(regex.htmlAttrClass, '');\r\n\t\tif (app.getOption('strip-empty'))\r\n\t\t\tcontent = content.replace(regex.htmlEmpty, '');\r\n\t\t\r\n\t\tpost.content = content;\r\n\t\treturn post;\r\n\t};\r\n\t\r\n\t// generates output in json tree + xml, both for display in app.previewPosts\r\n\t// as well as for export (the xml array) & download\r\n\t\r\n\tapp.generatePostsOutput = function(posts) {\r\n\t\tapp.cache.set('_posts', app.cache.get('cms').convertPosts(posts));\r\n\t\tvar output = '', tree, arr = [], posts = posts || app.cache.get('_posts');\r\n\t\tfor (var i = 0; i < posts.length; i++) {\r\n\t\t\ttree = new app.gsXML();\r\n\t\t\tconsole.log(posts[i].metad);\r\n\t\t\tfor (var prop in posts[i]) {\r\n\t\t\t\ttree.set(prop, 'content', posts[i][prop]);\r\n\t\t\t}\r\n\t\t\tarr.push({json: tree.data, xml: app.generatePostXml(tree.data)});\r\n\t\t}\r\n\t\tapp.cache.set('posts', arr);\r\n\t\treturn arr;\r\n\t};\r\n\t\r\n\t// app.processPost hook for WP-specific options\r\n\t\r\n\tWP.processPost = function(post) {\r\n\t\tvar content = post.content, metad = post.metad, regex = {\r\n\t\t\thtmlAll: /<\\/*.*?>/g,\r\n\t\t\twpShorts: /\\[.*?\\[\\/.*?\\]/g,\r\n\t\t\twpMoreTag: '<!--more-->'\r\n\t\t};\r\n\t\tif (app.getOption('strip-shortcodes')) \r\n\t\t\tcontent = content.replace(regex.wpShorts, '');\r\n\t\tif (content.indexOf(regex.wpMoreTag) > 0) {\r\n\t\t\tcontent = content.split(regex.wpMoreTag);\r\n\t\t\tif (app.getOption('set-more-metad'))\r\n\t\t\t\tmetad = content[0].replace(regex.htmlAll, '');\r\n\t\t\tif (app.getOption('strip-more-text'))\r\n\t\t\t\tcontent = content[1];\r\n\t\t\telse\r\n\t\t\t\tcontent = content.join('');\r\n\t\t\tif (app.getOption('strip-more-tag'))\r\n\t\t\t\tcontent = content.replace(regex.wpMoreTag, '');\r\n\t\t}\r\n\t\tpost.content = content;\r\n\t\tpost.metad = metad || '';\r\n\t\treturn post;\r\n\t};\r\n\t\r\n\t// basically the same as generic postprop extractor,\r\n\t// except we map individual category fields to one property\r\n\t\r\n\tWP.extractPostProps = function(postXml, props) {\r\n\t\t// result holds an object with all defined tags as children\r\n\t\t// so we can add a new property to it without problem\r\n\t\tvar result = app.extractPostProps.call(null, postXml, props),\r\n\t\t\t\tcategories = postXml.getElementsByTagName('category');\r\n\t\tresult.categories = [];\r\n\t\t\r\n\t\tfor (var i = 0; i < categories.length; i++) {\r\n\t\t\tresult.categories.push(categories[i].textContent);\r\n\t\t}\r\n\t\tresult.categories = result.categories.join(', ');\r\n\t\treturn result;\r\n\t};\r\n\t\r\n\tWP['convertPosts'] = function(jsPosts) {\r\n\t\tvar jsPosts = app.cache.get('__posts');\r\n\t\tvar map = WP.map, result = [], processedContent;\r\n\t\tfor (var i = 0; i < jsPosts.length; i++) {\r\n\t\t\tresult[i] = {};\r\n\t\t\tfor (var prop in jsPosts[i]) {\r\n\t\t\t\tif (map.hasOwnProperty(prop))\r\n\t\t\t\t\tresult[i][map[prop].mapTo] = jsPosts[i][prop];\r\n\t\t\t}\r\n\t\t\tprocessedContent = app.processPost(result[i], app.cache.get('_site')['wp:base_site_url']);\r\n\t\t\tresult[i].metad = processedContent.metad;\r\n\t\t\tresult[i].author = result[i].user;\r\n\t\t\tresult[i].content = processedContent.content;\r\n\t\t\tresult[i].template = app.getOption('set-tmpl');\r\n\t\t\tresult[i].parent = app.getOption('set-parent');\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n\tapp.bindClick = function(e) {\r\n\t\tvar target = e.target || e.srcElement;\r\n\t\tif (target.id === 'convert-xml') {\r\n\t\t\tapp.generatePostsOutput();\r\n\t    app.previewPosts();\r\n\t\t} else if (target.id === 'preview-prev' || target.parentNode.id === 'preview-prev') {\r\n\t\t\tapp.view.previewIndex = app.view.previewIndex - 1 > 0 ? app.view.previewIndex - 1 : 0;\r\n\t\t  app.previewPosts();\r\n\t\t} else if (target.id === 'preview-next' || target.parentNode.id === 'preview-next') {\r\n\t\t\tapp.view.previewIndex = app.view.previewIndex + 1 < app.cache.get('posts').length ? app.view.previewIndex + 1 : app.view.previewIndex;\r\n\t\t  app.previewPosts();\r\n\t\t} else if (target.id === 'download-zip') {\r\n\t\t\tvar posts = app.cache.get('posts'),\r\n\t\t      zip = new JSZip(), fileName;\r\n\t\t\tfor (var i = 0; i < posts.length; i++) {\r\n\t\t\t\tfileName = posts[i].json.children[1].content + '.xml';\r\n\t\t\t\tzip.file(fileName, posts[i].xml);\r\n\t\t\t\tconsole.log(zip);\r\n\t\t\t}\r\n\t\t\tvar content = zip.generate({type:\"blob\"});\r\n\t\t\tsaveAs(content, \"posts.zip\");\r\n\t\t}\r\n\t}\r\n\taddEvent(document.getElementById('upload-xml'), 'change', function(e) {\r\n\t\tvar target = e.target || e.srcElement;\r\n\t  app.readXml(target.files[0]);\r\n\t});\r\n\taddEvent(document.body, 'click', app.bindClick);\r\n\tdocument.getElementsByName('view-mode')[0].onchange = app.previewPosts;\r\n\tdocument.getElementsByName('view-mode')[1].onchange = app.previewPosts;\r\n\t\r\n\tdocument.getElementById('other-settings').innerHTML = '<tr><th colspan=\"2\">' + app.cache.get('cms','name') + '</th></tr>' + document.getElementById(app.cache.get('cms').name.toLowerCase() + '-settings').innerHTML;\r\n}());\r\n\r\n\t\t/*\r\n\t\t// this part might be useful for unmapping unknown tags\r\n\t\tfunction iter(node, obj) {\r\n\t\t\tvar result = obj || {};\r\n\t\t\tif (node.nodeType === 1 && node.childNodes.length) {\r\n\t\t\t\tresult[node.nodeName.toLowerCase()] = {};\r\n\t\t\tfor (var i = 0; i < node.childNodes.length; i++) {\r\n\t\t\t\titer(node.childNodes[i], result[node.nodeName.toLowerCase()]);\r\n\t\t\t}\r\n\t\t\t} else if (node.nodeType === 3 ||node.nodeType === 8  ) {\r\n\t\t\t\tresult[node.nodeName.toLowerCase()] = node.textContent;\r\n\t\t\t} \r\n\t\t\treturn result;\r\n\t\t} */"]}